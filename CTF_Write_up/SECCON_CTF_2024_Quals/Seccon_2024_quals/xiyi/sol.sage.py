

# This file was *autogenerated* from the file sol.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_2 = Integer(2)
import os

set_verbose(_sage_const_0 )
os.environ['PWNLIB_NOTERM'] = '1'
os.environ['TERM'] = 'linux'


import json
import os
import signal
from secrets import randbelow

from Crypto.Util.number import isPrime

from lib import *
from params import L, M, N
from pwn import *

# s = remote("localhost", 13333)
s = process(["python3", "server.py"])

# initialize
# xs = [Pt(randbelow(M)) for _ in range(L)]
xs = [Pt(_sage_const_2 ) for _ in range(L)]


C = Cryptosystem.from_privkey(Privkey.generate(N))
assert C.privkey is not None
n = C.pubkey.n
p = C.privkey.p
q = C.privkey.q

print(n, p, q)

enc_xs = xs
s.sendlineafter(b"> ", json.dumps({"n": n, "enc_xs": enc_xs}).encode())

params = json.loads(s.recvline().strip().decode())
enc_alphas, beta_sum_mod_n = params["enc_alphas"], params["beta_sum_mod_n"]

w = [L(i) for i in enc_alphas]
print(w)
# ys = [0] * L
# s.sendlineafter(b"> ", json.dumps({"ys": ys, "p": C.privkey.p, "q": C.privkey.q}).encode())
# print(s.recvline().strip().decode())  # Congratz! or Wrong...
# print(s.recvline().strip().decode())  # flag or ys


"""

enc_alpha = enc_x^y * (r)
x * y = alpha + r

"""

