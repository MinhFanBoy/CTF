

# This file was *autogenerated* from the file sol.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_4096 = Integer(4096); _sage_const_1 = Integer(1); _sage_const_3 = Integer(3); _sage_const_2 = Integer(2)
import os

set_verbose(_sage_const_0 )
os.environ['PWNLIB_NOTERM'] = '1'
os.environ['TERM'] = 'linux'

import random
import sys
from Crypto.Util.number import *
from gmpy2 import iroot
from pwn import *


for _ in range(_sage_const_4096 ):
    i = process(["python", "server.py"])
    n, e = eval(i.recvline().strip().split(b' = ')[_sage_const_1 ])
    c = int(i.recvline().strip().split(b' = ')[_sage_const_1 ])

    S = _sage_const_3  * (int(iroot(c, _sage_const_3 )[_sage_const_0 ]) ** _sage_const_2 )

    M = matrix([
        [n, S], 
        [-e, _sage_const_0 ]
    ]).LLL()

    k = M[_sage_const_0 ][_sage_const_1 ] // S
    s = (M[_sage_const_0 ][_sage_const_0 ] - _sage_const_1 ) // k
    phi = n - s - _sage_const_1 

    d = inverse(e, phi)
    m = pow(c, d, n)
    print(long_to_bytes(m))

