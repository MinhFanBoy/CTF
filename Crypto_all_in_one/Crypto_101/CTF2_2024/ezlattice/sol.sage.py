

# This file was *autogenerated* from the file sol.sage
from sage.all_cmdline import *   # import sage library

_sage_const_9848463356094730516607732957888686710609147955724620108704251779566910519170690198684628685762596232124613115691882688827918489297122319416081019121038443 = Integer(9848463356094730516607732957888686710609147955724620108704251779566910519170690198684628685762596232124613115691882688827918489297122319416081019121038443); _sage_const_11403618200995593428747663693860532026261161211931726381922677499906885834766955987247477478421850280928508004160386000301268285541073474589048412962888947 = Integer(11403618200995593428747663693860532026261161211931726381922677499906885834766955987247477478421850280928508004160386000301268285541073474589048412962888947); _sage_const_256 = Integer(256); _sage_const_47 = Integer(47); _sage_const_2 = Integer(2); _sage_const_128 = Integer(128); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0)
from Crypto.Util.number import *

h = _sage_const_9848463356094730516607732957888686710609147955724620108704251779566910519170690198684628685762596232124613115691882688827918489297122319416081019121038443 
p = _sage_const_11403618200995593428747663693860532026261161211931726381922677499906885834766955987247477478421850280928508004160386000301268285541073474589048412962888947      

"""

h = gmpy2.invert(f, p) * g % p
h * f = g mod p
h - f ^ -1 * g + k * q = 0

"""
w = (_sage_const_256  ** _sage_const_47 ) / (_sage_const_2  ** _sage_const_128 )
M = matrix([
    [h * w, _sage_const_1 ],
    [p * w, _sage_const_0 ]
])

for i in M.LLL():
    for j in i:
        print(long_to_bytes(int(abs(j))))

