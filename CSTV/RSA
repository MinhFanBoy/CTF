```python

from Crypto.PublicKey import RSA
from Crypto.Util.number import *
from gmpy2 import iroot

c =  open("ciphertext.txt", "rb+")
enc = bytes_to_long(c.read())

d = open("mykey.pem", "r")
d = vars(RSA.import_key(d.read()))
n = int(d["_n"])
e = int(d["_e"])

def Fermat_attack(n: int) -> tuple:
    if n % 2 == 0:
        return 2, n//2
    
    a = iroot(n, 2)[0] + 1
    b = iroot(a ** 2 - n, 2)[0]

    while (a + b) * (a - b) != n:
        a += 1
        b = iroot(a ** 2 - n, 2)[0]
    
    return a + b, a - b

q, p = Fermat_attack(n)
phi = (q - 1) * (p - 1)
d = pow(e, -1, phi)
print(long_to_bytes(pow(enc, d, n)))

```
